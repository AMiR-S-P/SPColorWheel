 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XamlAnalyzer.Templates"
                    xmlns:model="clr-namespace:XamlAnalyzer.Model"
                    xmlns:View="clr-namespace:XamlAnalyzer.View"
                     xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity">


    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="/SPCWCore;component/Resources/Styles/Light/TextBlockStyle.xaml" />
        <ResourceDictionary Source="/SPCWCore;component/Resources/Styles/Light/CheckBoxStyle.xaml"/>
        <ResourceDictionary Source="/XamlAnalyzer;component/Resources/Styles/Light/Buttons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type model:PropertyModel}"  x:Key="SolidColorBrushPropertiesTemplate" >

        <Grid  >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock  Grid.Row="0" Text="Color" Style="{StaticResource HeaderTextBlockStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <CheckBox x:Name="isExpandedCheckBox" HorizontalAlignment="Stretch" Margin="2" Grid.Row="0" Style="{StaticResource expanderCheckBox}"/>
            <Grid x:Name="content" Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked,ElementName=isExpandedCheckBox}" Value="true">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>


                <!--<RadioButton Command="{Binding DataContext.SelectSolidBrushCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type View:XamlEditor}}}" 
                         CommandParameter="{Binding Value}" Margin="2">-->
                    <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".4*" />
                        <ColumnDefinition Width=".6*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                            <Canvas Width="30" Grid.Column="0" Grid.Row="0" Height="30" Background="{Binding Value}" Margin="5" HorizontalAlignment="Left"/>
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding  Value}"   Background="Transparent" BorderBrush="#ffff9801" 
                             VerticalAlignment="Center" Padding="3"  IsReadOnly="True"
                             Margin="0,0,2,0">
                        <interactivity:Interaction.Triggers>
                            <interactivity:EventTrigger EventName="TextChanged" >
                                <interactivity:InvokeCommandAction Command="{Binding DataContext.RefreshBrushXaml,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=View:XamlEditor}}"/>
                            </interactivity:EventTrigger>
                        </interactivity:Interaction.Triggers>
                    </TextBox>
                </Grid> 
                <!--</RadioButton>-->
            </Grid>
        </Grid>

    </DataTemplate>
</ResourceDictionary>